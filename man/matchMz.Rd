% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/matchMz.R
\name{ValueParam}
\alias{ValueParam}
\alias{MzParam}
\alias{Mass2MzParam}
\alias{Mass2MzRtParam}
\alias{MzRtParam}
\alias{Mz2MassParam}
\alias{Mz2MassRtParam}
\alias{matchMz}
\alias{matchMz,numeric,numeric,ValueParam-method}
\alias{matchMz,numeric,data.frameOrSimilar,ValueParam-method}
\alias{matchMz,data.frameOrSimilar,numeric,ValueParam-method}
\alias{matchMz,data.frameOrSimilar,data.frameOrSimilar,ValueParam-method}
\alias{matchMz,numeric,numeric,Mass2MzParam-method}
\alias{matchMz,numeric,data.frameOrSimilar,Mass2MzParam-method}
\alias{matchMz,data.frameOrSimilar,numeric,Mass2MzParam-method}
\alias{matchMz,data.frameOrSimilar,data.frameOrSimilar,Mass2MzParam-method}
\alias{matchMz,numeric,data.frameOrSimilar,MzParam-method}
\alias{matchMz,data.frameOrSimilar,numeric,MzParam-method}
\alias{matchMz,data.frameOrSimilar,data.frameOrSimilar,MzParam-method}
\alias{matchMz,data.frameOrSimilar,data.frameOrSimilar,Mass2MzRtParam-method}
\alias{matchMz,data.frameOrSimilar,data.frameOrSimilar,MzRtParam-method}
\alias{matchMz,numeric,numeric,Mz2MassParam-method}
\alias{matchMz,numeric,data.frameOrSimilar,Mz2MassParam-method}
\alias{matchMz,data.frameOrSimilar,numeric,Mz2MassParam-method}
\alias{matchMz,data.frameOrSimilar,data.frameOrSimilar,Mz2MassParam-method}
\alias{matchMz,data.frameOrSimilar,data.frameOrSimilar,Mz2MassRtParam-method}
\alias{matchMz,SummarizedExperiment,ANY,Param-method}
\title{m/z matching}
\usage{
ValueParam(tolerance = 0, ppm = 5)

MzParam(tolerance = 0, ppm = 5)

Mass2MzParam(adducts = c("[M+H]+"), tolerance = 0, ppm = 5)

Mass2MzRtParam(adducts = c("[M+H]+"), tolerance = 0, ppm = 5, toleranceRt = 0)

MzRtParam(tolerance = 0, ppm = 0, toleranceRt = 0)

Mz2MassParam(
  queryAdducts = c("[M+H]+"),
  targetAdducts = c("[M-H]-"),
  tolerance = 0,
  ppm = 5
)

Mz2MassRtParam(
  queryAdducts = c("[M+H]+"),
  targetAdducts = c("[M+H]+"),
  tolerance = 0,
  ppm = 5,
  toleranceRt = 0
)

matchMz(query, target, param, ...)

\S4method{matchMz}{numeric,numeric,ValueParam}(query, target, param)

\S4method{matchMz}{numeric,data.frameOrSimilar,ValueParam}(query, target, param, valueColname = character())

\S4method{matchMz}{data.frameOrSimilar,numeric,ValueParam}(query, target, param, valueColname = character())

\S4method{matchMz}{data.frameOrSimilar,data.frameOrSimilar,ValueParam}(query, target, param, valueColname = character())

\S4method{matchMz}{numeric,numeric,Mass2MzParam}(query, target, param)

\S4method{matchMz}{numeric,data.frameOrSimilar,Mass2MzParam}(query, target, param, massColname = "exactmass")

\S4method{matchMz}{data.frameOrSimilar,numeric,Mass2MzParam}(query, target, param, mzColname = "mz")

\S4method{matchMz}{data.frameOrSimilar,data.frameOrSimilar,Mass2MzParam}(query, target, param, mzColname = "mz", massColname = "exactmass")

\S4method{matchMz}{numeric,data.frameOrSimilar,MzParam}(query, target, param, mzColname = "mz")

\S4method{matchMz}{data.frameOrSimilar,numeric,MzParam}(query, target, param, mzColname = "mz")

\S4method{matchMz}{data.frameOrSimilar,data.frameOrSimilar,MzParam}(query, target, param, mzColname = c("mz", "mz"))

\S4method{matchMz}{data.frameOrSimilar,data.frameOrSimilar,Mass2MzRtParam}(
  query,
  target,
  param,
  massColname = "exactmass",
  mzColname = "mz",
  rtColname = c("rt", "rt")
)

\S4method{matchMz}{data.frameOrSimilar,data.frameOrSimilar,MzRtParam}(
  query,
  target,
  param,
  mzColname = c("mz", "mz"),
  rtColname = c("rt", "rt")
)

\S4method{matchMz}{numeric,numeric,Mz2MassParam}(query, target, param)

\S4method{matchMz}{numeric,data.frameOrSimilar,Mz2MassParam}(query, target, param, mzColname = "mz")

\S4method{matchMz}{data.frameOrSimilar,numeric,Mz2MassParam}(query, target, param, mzColname = "mz")

\S4method{matchMz}{data.frameOrSimilar,data.frameOrSimilar,Mz2MassParam}(query, target, param, mzColname = c("mz", "mz"))

\S4method{matchMz}{data.frameOrSimilar,data.frameOrSimilar,Mz2MassRtParam}(
  query,
  target,
  param,
  mzColname = c("mz", "mz"),
  rtColname = c("rt", "rt")
)

\S4method{matchMz}{SummarizedExperiment,ANY,Param}(query, target, param, mzColname = "mz", rtColname = c("rt", "rt"))
}
\arguments{
\item{tolerance}{for any \code{param} object: \code{numeric(1)} defining the maximal
acceptable absolute difference in m/z (or in mass for \code{Mz2MassParam})
to consider them \emph{matching}.}

\item{ppm}{for any \code{param} object: \code{numeric(1)} defining the maximal
acceptable m/z-dependent (or mass-dependent for \code{Mz2MassParam})
difference (in parts-per-million) in m/z values to consider them to
be \emph{matching}.}

\item{adducts}{for \code{Mass2MzParam} or \code{Mass2MzRtParam}: either \code{character}
with adduct names from \code{\link[MetaboCoreUtils:adductNames]{MetaboCoreUtils::adducts()}} or \code{data.frame} with
a custom adduct definition. This parameter is used to calculate m/z from
target compounds' masses. Custom adduct definitions can be passed to the
adduct parameter in form of a \code{data.frame}. This \code{data.frame} is expected
to have columns \code{"mass_add"} and \code{"mass_multi"} defining the \emph{additive}
and \emph{multiplicative} part of the calculation. See
\code{\link[MetaboCoreUtils:adductNames]{MetaboCoreUtils::adducts()}} for the expected format or use
\code{MetaboCoreUtils::adductNames("positive")} and
\code{MetaboCoreUtils::adductNames("negative")} for valid adduct names.}

\item{toleranceRt}{for \code{Mass2MzRtParam} or \code{MzRtParam}: \code{numeric(1)}
defining the maximal acceptable absolute difference in retention time
values to consider them them \emph{matching}.}

\item{queryAdducts}{for \code{Mz2MassParam}. Adducts used to derive mass
values from query m/z values. The expected format is the same as that
for parameter \code{adducts}.}

\item{targetAdducts}{for \code{Mz2MassParam}. Adducts used to derive mass
values from target m/z values. The expected format is the same as that
for parameter \code{adducts}.}

\item{query}{feature table containing information on MS1 features. Can be
a \code{data.frame}, \code{DataFrame}, \code{matrix}, \code{SummarizedExperiment} or
\code{numeric}. It is expected to contain m/z values and can contain also
other variables. Matchings based on both m/z and retention time can be
performed when a column with retention times is present in both \code{query}
and \code{target}.}

\item{target}{compound table with metabolites to compare against.}

\item{param}{parameter object defining the matching approach and containing
the settings for that approach. See description above for details.}

\item{...}{currently ignored.}

\item{valueColname}{\code{character} specifying the name of the column in
\code{query} or/and the one in \code{target}with the desired values for the
matching. This parameter should only be used when \code{param} is
\code{valueParam} and in this case it must be provided (unless both \code{query}
and \code{target} are \code{numeric}). It can be \code{character(1)} or \code{character(2)}
in a similar way to \code{mzColname}.}

\item{massColname}{\code{character(1)} with the name of the column in \code{target}
containing the mass of compounds. To be used when \code{param} is
\code{Mass2MzParam} or \code{Mass2MzRtParam} (and target is not already \code{numeric}
with the masses). Defaults to \code{massColname = "exactmass"}.}

\item{mzColname}{\code{character} specifying the name(s) of the column(s) in
\code{query} or/and \code{target}with the m/z values. If one among \code{query} and
\code{target} is \code{numeric} (and therefore there is no need to specify the
column name) or \code{query} is not \code{numeric} and \code{param} is \code{Mass2MzParam}
or \code{Mass2MzRtParam} (and therefore the name of the column with m/z needs
only to be specified for \code{query}) then \code{mzColname} is expected to be
\code{character(1)}. If both \code{query} and \code{target} are not numeric \code{mzColname}
is expected to be \code{character(2)} (or \code{character(1)} and in this last case
the two column names are assumed to be the same). If not specified the
assumed default name for coulmns with m/z values is \code{"mz"}.}

\item{rtColname}{\code{character(2)} with the name of the column containing
the compounds retention times in \code{query} and the name for the one in
\code{target}. It can also be \code{character(1)} if the two names are the same.
To be used when \code{param} is \code{MzRtParam} or \code{Mass2MzRtParam}.
Defaults to \code{rtColname = c("rt", "rt")}.}
}
\value{
\link{Matched} object representing the result (or more precisely
\link{MatchedSummarizedExperiment} if \code{query} is \code{SummarizedExperiment}).
To evaluate each match the object contains, depending on which \code{param} is
used, the m/z or mass error in ppm (variable \code{"ppm_error"}) as well as
the m/z or mass difference (variable \code{"score"}). When \code{param} is
\code{Mz2MassParam} such difference and ppm error are obtained using mass values
internally computed from m/z values in \code{query} and \code{target} (see above
for more detail on \code{Mz2MassParam}). When \code{parm} is either \code{MzParam},
\code{MzRtParam}, \code{Mass2MzParam} or \code{Mass2MzRtParam} \code{"ppm_error"} and \code{"score"}
are computed from m/z values. In the first two cases both the m/z values are
contained in \code{query} and \code{target} parameters. In the last two m/z values are
internally computed from reference mass values in \code{target}. See more details
for each individual parameter above. Additionally, if \code{param} is either
\code{MzRtParam} or \code{Mass2MzRtParam} also retention time is used for the matching
and the difference in retention time for each of the matched elements is also
added to the returned \code{Matched} object. Note that, for a match, a negative
value of \code{"score"} (or \code{"score_rt"}) indicates that the m/z or mass (or
retention time) associated to the query element is smaller than that
associated to the target element.
}
\description{
The \code{matchMz} method matches elements from \code{query} with those in \code{target}
using different matching approaches depending on parameter \code{param}.
Generally, \code{query} is expected to contain MS experimental values
(m/z and possibly retention time) while \code{target} theoretical values from
reference compounds. \code{target} can be \code{numeric} or \code{data.frameOrSimilar}
(i.e. \code{data.frame}, \code{matrix} or \code{DataFrame}). The same is true for \code{query}
which in addition can also be \code{SummarizedExperiment}.

Available \code{param} objects and corresponding matching approaches are:
\itemize{
\item \code{Mass2MzParam}: match m/z values against reference compounds for
which the (exact) mass is known. Before matching, m/z values are calculated
from the compounds masses in the \emph{target} table using the adducts
specified via \code{Mass2MzParam} \code{adducts} parameter (defaults to
\code{adducts = "[M+H]+"}). \code{query} must be a \code{data.frameOrSimilar} with a
column containing m/z values (column name can be specified with parameter
\code{mzColname} which defaults to \code{"mz"}) or a \code{numeric} with the m/z values of
the features. \code{target} must be a \code{data.frameOrSimilar} with a column
containing (monoisotopic) masses of the reference compounds (the column
name can be specified with parameter \code{massColname} which defaults
to \code{"exactmass"}) or a \code{numeric} with the mass values.
Parameters \code{tolerance} and \code{ppm} allow to define the maximal acceptable
(constant or m/z relative) difference between m/zs in \code{query} and those
obtained from masses in \code{target}.
\item \code{Mass2MzRtParam}: match m/z and retention time values against
reference compounds for which the (exact) mass \strong{and} retention time are
known. Before matching, m/z values are calculated from the compounds masses
in the \emph{target} table using the adducts specified via
\code{Mass2MzParam} \code{adducts} parameter (defaults to \code{adducts = "[M+H]+"}).
The retention time is considered equal for different adducts of the
same compound. \code{query} must be a \code{data.frameOrSimilar} with m/z and
retention time values of the features. The names of the columns containing
these information can be specified with parameters \code{mzColname} and
\code{rtColname} which default to \code{"mz"} and \code{"rt"}, respectively.
\code{target} must be a \code{data.frameOrSimilar} with the (monoisotopic)
masses and retention times for each reference compound. The names of the
columns containing this information can be specified with parameters
\code{massColname} and \code{rtColname} which default to \code{"exactmass"} and \code{"rt"},
respectively. \code{Mass2MzRtParam} parameters \code{tolerance} and \code{ppm} have
the same meaning as in \code{Mass2MzParam}; parameter \code{toleranceRt} allows to
specify the maximal acceptable difference between query and target
retention time values.
\item \code{MzParam}: match m/z values against reference compounds for which the m/z
is known. \code{query} must be either a \code{data.frameOrSimilar} with a column
containing m/z values (whose name can be specified with parameter
\code{mzColname}, default being \code{mzColname = "mz"}) or a \code{numeric} with the m/z
values of the features. The same holds for \code{target}. \code{MzParam} parameters
\code{tolerance} and \code{ppm} allow to define the maximal acceptable (constant or
m/z relative) difference between query and target m/z values.
\item \code{MzRtParam}: match m/z and retention time values against reference
compounds for which m/z and retention time are known. \code{query} must be a
\code{data.frameOrSimilar} or a \code{SummarizedExperiment} \code{query} in the first
case or its \code{rowData} in the second must have columns containing the m/zs
and retention times of the features. \code{target} must be a
\code{data.frameOrSimilar} again with columns containing m/zs and retention
times. The names of such columns can be specified with parameters
\code{mzColname} and \code{rtColname} (defaulting to \code{c("mz", "mz")} and
\code{c("rt", "rt")}, respectively). \code{MzRtParam} parameters \code{tolerance} and
\code{ppm} have the same meaning as in \code{MzParam}; \code{MzRtParam} parameter
\code{toleranceRt} allows to specify the maximal acceptable difference between
query and target retention time values.
\item \code{Mz2MassParam}: first convert to masses the m/z values of \code{query} and
\code{target} based respectively on \code{Mz2MassParam} parameters \code{queryAdducts}
(defaults to \code{queryAdducts = "[M+H]+"}) and \code{targetAdducts} (defaults to
\code{targetAdducts = "[M-H]-"}) and then match the obtained masses.
\code{query} must be either a \code{data.frameOrSimilar} with a column containing
m/z values (whose name can be specified with parameter \code{mzColname},
default being \code{mzColname = "mz"}) or a \code{numeric} with the m/z values.
The same holds for \code{target}. Parameters \code{tolerance} and \code{ppm} allow to
define the maximal acceptable (constant or mass relative) difference
between masses derived from \code{query} and \code{target}.
\item \code{ValueParam}: matches elements from from \code{query} (if \code{numeric}) or else
from one of its columns with those from \code{target} (if \code{numeric}) or else
from one of its columns. The name(s) of the colum(s) used for the matching
(if \code{query} and \code{target} are not bot numeric has/have to be specified via
parameter \code{valueColname}.
}
}
\examples{

library(MetaboCoreUtils)
## Create a simple "target/reference" compound table
target_df <- data.frame(
   name = c("Tryptophan", "Leucine", "Isoleucine"),
   formula = c("C11H12N2O2", "C6H13NO2", "C6H13NO2"),
   exactmass = c(204.089878, 131.094629, 131.094629)
)

## Create a "feature" table with m/z of features. We calculate m/z for
## certain adducts of some of the compounds in the reference table.
fts <- data.frame(
    feature_id = c("FT001", "FT002", "FT003"),
    mz = c(mass2mz(204.089878, "[M+H]+"),
           mass2mz(131.094629, "[M+H]+"),
           mass2mz(204.089878, "[M+Na]+") + 1e-6))

## Define the parameters for the matching
parm <- Mass2MzParam(
    adducts = c("[M+H]+", "[M+Na]+"),
    tolerance = 0,
    ppm = 20)
res <- matchMz(fts, target_df, parm)
res

## Get the full matching result:
matchedData(res)

## We have thus matches of FT002 to two different compounds (but with the
## same mass).

## We repeat the matching requiring an exact match
parm <- Mass2MzParam(
    adducts = c("[M+H]+", "[M+Na]+"),
    tolerance = 0,
    ppm = 0)
res <- matchMz(fts, target_df, parm)
res

matchedData(res)

## The last feature could thus not be matched to any compound.

## At last we use also different adduct definitions.
parm <- Mass2MzParam(
    adducts = c("[M+K]+", "[M+Li]+"),
    tolerance = 0,
    ppm = 20)
res <- matchMz(fts, target_df, parm)
res

matchedData(res)

## No matches were found.

## We can also match a "feature" table with a target data.frame taking into
## account both m/z and retention time values.
target_df <- data.frame(
  name = c("Tryptophan", "Leucine", "Isoleucine"),
  formula = c("C11H12N2O2", "C6H13NO2", "C6H13NO2"),
  exactmass = c(204.089878, 131.094629, 131.094629),
  rt = c(150, 140, 140)
)

fts <- data.frame(
  feature_id = c("FT001", "FT002", "FT003"),
  mz = c(mass2mz(204.089878, "[M+H]+"),
         mass2mz(131.094629, "[M+H]+"),
         mass2mz(204.089878, "[M+Na]+") + 1e-6),
  rt = c(150, 140, 150.1)
)

## Define the parameters for the matching
parm <- Mass2MzRtParam(
  adducts = c("[M+H]+", "[M+Na]+"),
  tolerance = 0,
  ppm = 20,
  toleranceRt = 0)

res <- matchMz(fts, target_df, parm)
res

## Get the full matching result:
matchedData(res)

## FT003 could not be matched to any compound, FT002 was matched to two
## different compounds (but with the same mass).

## We repeat the matching allowing a positive tolerance for the matches
## between rt values

## Define the parameters for the matching
parm <- Mass2MzRtParam(
  adducts = c("[M+H]+", "[M+Na]+"),
  tolerance = 0,
  ppm = 20,
  toleranceRt = 0.1)

res <- matchMz(fts, target_df, parm)
res

## Get the full matching result:
matchedData(res)

## Also FT003 was matched in this case

## It is also possible to match directly m/z values
mz1 <- c(12, 343, 23, 231)
mz2 <- mz1 + rnorm(4, sd = 0.001)

res <- matchMz(mz1, mz2, MzParam(tolerance = 0.001))

matchedData(res)
}
\seealso{
\link{matchSpectra} or \code{\link[=CompareSpectraParam]{CompareSpectraParam()}} for spectra data matching
}
\author{
Andrea Vicini, Michael Witting
}
