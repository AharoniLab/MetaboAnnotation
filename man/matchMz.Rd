% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/matchMz.R
\name{TargetMass2MzParam}
\alias{TargetMass2MzParam}
\alias{matchMz}
\alias{matchMz,numeric,data.frame,TargetMass2MzParam-method}
\alias{matchMz,data.frame,data.frame,TargetMass2MzParam-method}
\title{m/z matching}
\usage{
TargetMass2MzParam(adducts = c("[M+H]+"), tolerance = 0, ppm = 5)

matchMz(query, target, param, ...)

\S4method{matchMz}{numeric,data.frame,TargetMass2MzParam}(query, target, param, BPPARAM = SerialParam())

\S4method{matchMz}{data.frame,data.frame,TargetMass2MzParam}(query, target, param, BPPARAM = SerialParam())
}
\arguments{
\item{adducts}{for \code{TargetMass2MzParam}: \code{character} with the names of
adducts to calculate m/z from target compounds' masses. Use
\code{MetaboCoreUtils::adductNames("positive")} and
\code{MetaboCoreUtils::adductNames("negative")} for valid names.}

\item{tolerance}{for \code{TargetMass2MzParam}: \code{numeric(1)} defining the maximal
acceptable absolute difference in m/z values to consider them \emph{matching}.
See \code{\link[MsCoreUtils:matching]{MsCoreUtils::closest()}} for more information.}

\item{ppm}{for \code{TargetMass2MzParam}: \code{numeric(1)} defining the maximal
acceptable m/z-dependent difference (in parts-per-million) in m/z values
to consider them to be \emph{matching}. See \code{\link[MsCoreUtils:matching]{MsCoreUtils::closest()}} for
more information.}

\item{query}{feature table containing information on MS1 features. Can be
a \code{data.frame} (with mandatory column names \code{"mz"}) or a \code{numeric} with
the m/z values.}

\item{target}{compound table with metabolites to compare against.}

\item{param}{parameter object defining the matching approach and containing
the settings for that approach. See description above for details.}

\item{...}{currently ignored.}

\item{BPPARAM}{parallel processing setup. See \code{BiocParallel::bpparam()} for
details.}
}
\value{
\link{Matched} object representing the result
}
\description{
The \code{matchMz} method matches (compares) m/z values from a MS1 data table
(parameter \code{query}) with theoretical m/z values for (reference) compounds
(parameter \code{target}). The approach which is used to perform the comparison
and additional settings for this matching can be defined with \code{param}.

Available matching approaches and respective \code{param} objects are:
\itemize{
\item \code{TargetMass2MzParam}: match m/z values against reference compounds for
which the (exact) mass is known. Before matching, m/z values are calculated
from the mass of the compounds in the \emph{target} table for the specified
adducts (parameter \code{adduct} in the parameter object).
\code{query} must be a \code{data.frame} with a column named \code{"mz"} or a \code{numeric}
with the m/z values of the features. If \code{target} is a \code{data.frame} it must
contain a column \code{"exactmass"} with the exact monoisotopic mass for each
compound. \code{TargetMass2MzParam}'s parameter \code{adducts} allows to define the
expected adducts (defaults to \verb{adducts = "[M+H]+" but any adducts available in [MetaboCoreUtils::adducts()] are supported). Parameter }tolerance\code{and}ppm` allow to define the maximal acceptable (constant or
m/z relative) difference between query and target m/z values.
}
}
\examples{

library(MetaboCoreUtils)
## Create a simple "target/reference" compound table
target_df <- data.frame(
   name = c("Tryptophan", "Leucine", "Isoleucine"),
   formula = c("C11H12N2O2", "C6H13NO2", "C6H13NO2"),
   exactmass = c(204.089878, 131.094629, 131.094629)
)

## Create a "feature" table with m/z of features. We calculate m/z for
## certain adducts of some of the compounds in the reference table.
fts <- data.frame(
    feature_id = c("FT001", "FT002", "FT003"),
    mz = c(mass2mz(204.089878, "[M+H]+"),
           mass2mz(131.094629, "[M+H]+"),
           mass2mz(204.089878, "[M+Na]+") + 1e-6))

## Define the parameters for the matching
parm <- TargetMass2MzParam(
    adducts = c("[M+H]+", "[M+Na]+"),
    tolerance = 0,
    ppm = 20)
res <- matchMz(fts, target_df, parm)
res

## Get the full matching result:
data(res)

## We have thus matches of FT002 to two different compounds (but with the
## same mass.

## We repeat the matching requiring an exact match
parm <- TargetMass2MzParam(
    adducts = c("[M+H]+", "[M+Na]+"),
    tolerance = 0,
    ppm = 0)
res <- matchMz(fts, target_df, parm)
res

data(res)

## The last feature could thus not be matched to any compound.

## At last we use also different adduct definitions.
parm <- TargetMass2MzParam(
    adducts = c("[M+K]+", "[M+Li]+"),
    tolerance = 0,
    ppm = 20)
res <- matchMz(fts, target_df, parm)
res

data(res)

## No matches were found.
}
\seealso{
\link{matchSpectra} or \code{\link[=CompareSpectraParam]{CompareSpectraParam()}} for spectra data matching
}
\author{
Andrea Vicini, Michael Witting
}
