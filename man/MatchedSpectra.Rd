% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MatchedSpectra.R
\name{MatchedSpectra}
\alias{MatchedSpectra}
\alias{MatchedSpectra-class}
\alias{length,MatchedSpectra-method}
\alias{show,MatchedSpectra-method}
\title{Representation of Spectra matches}
\usage{
MatchedSpectra(
  query = Spectra(),
  target = Spectra(),
  matches = data.frame(query_idx = integer(), target_idx = integer(), score =
    numeric())
)

\S4method{length}{MatchedSpectra}(x)

\S4method{show}{MatchedSpectra}(object)
}
\arguments{
\item{query}{\code{Spectra} with the query spectra.}

\item{target}{\code{Spectra} with the spectra against which \code{query} has been
matched.}

\item{matches}{\code{data.frame} with columns \code{"query_idx"} (\code{integer}),
\code{"target_idx"} (\code{integer}) and \code{"score"} (\code{numeric}) representing the
\emph{n:m} mapping of elements between the \code{query} and the \code{target} \code{Spectra}.}

\item{object}{\code{MatchedSpectra} object.}
}
\value{
See individual method desciption above for details.
}
\description{
Matches between query and target spectra can be represented by the
\code{MatchedSpectra} object. Functions like the \code{\link[=matchSpectra]{matchSpectra()}} function will
return this type of object.
}
\section{Extracting data}{

\itemize{
\item \code{length} returns the number of matches.
\item \code{target} returns the \emph{target} \code{Spectra}.
\item \code{query} returns the \emph{query} \code{Spectra}.
\item \code{whichTarget} returns an \code{integer} with the indices of the spectra in
\emph{target} that match at least on spectrum in \emph{query}.
\item \code{whichQuery} returns an \code{integer} with the indices of the spectra in
\emph{query} that match at least on spectrum in \emph{target}.
}
}

\examples{

## Creating a dummy MatchedSpectra object.
library(Spectra)
df1 <- DataFrame(
    msLevel = 2L, rtime = 1:10,
    spectrum_id = c("a", "b", "c", "d", "e", "f", "g", "h", "i", "j"))
df2 <- DataFrame(
    msLevel = 2L, rtime = rep(1:10, 20),
    spectrum_id = rep(c("A", "B", "C", "D", "E"), 20))
sp1 <- Spectra(df1)
sp2 <- Spectra(df2)
## Define matches between query spectrum 1 with target spectra 2 and 5,
## query spectrum 2 with target spectrum 2 and query spectrum 4 with target
## spectra 8, 12 and 15.
ms <- MatchedSpectra(
    sp1, sp2, matches = data.frame(query_idx = c(1L, 1L, 2L, 4L, 4L, 4L),
                                   target_idx = c(2L, 5L, 2L, 8L, 12L, 15L),
                                   score = 1:6))

}
\author{
Johannes Rainer
}
